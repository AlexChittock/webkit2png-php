{"name":"Webkit2png-php","tagline":"PHP wrapper for webkit2png on OS X","body":"# webkit2png-php\r\n\r\nwebkit2png-php is a PHP wrapper for the [webkit2png binary](https://github.com/paulhammond/webkit2png/) available on Mac OS X. Latest webkit2png version tested with this library is `v0.6`. For more details on webkit2png, please refer to the [webkit2png project](http://www.paulhammond.org/webkit2png/) page.\r\n\r\n## Requirements\r\n\r\n* [webkit2png binary](https://github.com/paulhammond/webkit2png/)\r\n* PHP 5.3 or greater\r\n* Shell access\r\n\r\n## Installation\r\n\r\nTo get started, require the library in your `composer.json` file:\r\n\r\n```JSON\r\n{\r\n\t\"require\": {\r\n\t\t\"kjung/webkit2png-php\": \"1.0.*@dev\"\r\n\t}\r\n}\r\n```\r\nThen run `composer install` or `composer update`.\r\n\r\n## Usage\r\n\r\n* Start by loading the autoloader: \r\n\r\n```PHP\r\nrequire_once 'vendor/autoload.php';\r\n```\r\n\r\n* Instantiate the library with the URL:\r\n\r\n```PHP\r\n$webkit2png = new \\kjung\\webkit2png('http://google.com');\r\n```\r\n\r\n* You can pass options to it but it is not required:\r\n\r\n```PHP\r\n$webkit2png->setOptions(array(\r\n\t'dir'      => 'screenshots/',\r\n\t'width'    => 1000,\r\n\t'fullsize' => true\r\n\t)\r\n);\r\n```\r\nThe library default directory is set to `images/` but you can always override it with the `dir` option as seen above.\r\n\r\n* Now Generate the image:\r\n\r\n```PHP\r\n$webkit2png->getImage();\r\n```\r\nAnd thats it!\r\n\r\n* Optionally, you can access the actual webkit2png query being sent with this method:\r\n\r\n```PHP\r\n$webkit2png->getQuery();\r\n```\r\n\r\n## Available Options\r\n\r\n| Option | Example |\r\n| :---: | :---: |\r\n| width | `1280` | \r\n| height | `800` |\r\n| zoom | `2.0` |\r\n| fullsize | `true` |\r\n| thumb | `true` |\r\n| clipped | `true` |\r\n| clipped-width | `1000` |\r\n| clipped-height | `800` |\r\n| scale | `3.0` |\r\n| dir | `'images/'` |\r\n| filename | `'image'` |\r\n| md5 | `true` |\r\n| datestamp | `true` |\r\n| delay | `3` |\r\n| js | `'\\'javascript string here\\''` |\r\n| no-image | `true` |\r\n| no-js | `true` |\r\n| transparent | `true` |\r\n| user-agent | `'\\'user agent string here\\''` |\r\n\r\nKeep in mind that for `js` and `user-agent`, you must either use double quotes or escape single quotes so that the string passed is wrapped by single quotes.\r\n\r\n## TODOs\r\n\r\n* Add validation\r\n* Complete Readme\r\n* Composer\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}